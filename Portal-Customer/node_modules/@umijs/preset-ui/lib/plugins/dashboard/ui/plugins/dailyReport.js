"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MESSAGES = void 0;

var React = _interopRequireWildcard(require("react"));

var _classnames = _interopRequireDefault(require("classnames"));

var _antd = require("antd");

var _context = _interopRequireDefault(require("../context"));

var _dailyReportModule = _interopRequireDefault(require("./dailyReport.module.less"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var Paragraph = _antd.Typography.Paragraph;
var useState = React.useState,
    useEffect = React.useEffect;
var PAGE_SIZE = 5;
var TAG_MAP = {
  发布: 'publish',
  文章: 'article',
  Star: 'star',
  star: 'star',
  Tweets: 'tweets'
};
var MESSAGES = {
  CHANGE_DAILY_ID: Symbol('CHANGE_DAILY_ID')
};
exports.MESSAGES = MESSAGES;

var DailyReport = function DailyReport(props) {
  var _detail$data, _detail$data2;

  var forceUpdate = props.forceUpdate;

  var _React$useContext = React.useContext(_context.default),
      api = _React$useContext.api;

  var _ = api._,
      event = api.event,
      useIntl = api.useIntl,
      hooks = api.hooks;
  var useRequest = hooks.useRequest;
  var intl = useIntl();

  var _React$useState = React.useState(PAGE_SIZE),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      size = _React$useState2[0],
      setSize = _React$useState2[1];

  var _useRequest = useRequest('https://cdn.jsdelivr.net/npm/umi-ui-rss/data/index.json'),
      data = _useRequest.data;

  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      currentId = _useState2[0],
      setCurrentId = _useState2[1];

  var changeCurrentId = function changeCurrentId(newId) {
    if (newId) {
      setCurrentId(newId);
      setSize(PAGE_SIZE);
    }
  };

  useEffect(function () {
    var _data$data, _data$data$;

    var id = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : (_data$data$ = _data$data[0]) === null || _data$data$ === void 0 ? void 0 : _data$data$.id;

    if (id) {
      setCurrentId(id);
    }
  }, [data === null || data === void 0 ? void 0 : data.data]);
  useEffect(function () {
    event.on(MESSAGES.CHANGE_DAILY_ID, changeCurrentId);
    return function () {
      event.off(MESSAGES.CHANGE_DAILY_ID, changeCurrentId);
    };
  }, []);

  var _useRequest2 = useRequest(function () {
    return "https://cdn.jsdelivr.net/npm/umi-ui-rss/data/detail/".concat(currentId, ".json");
  }),
      detail = _useRequest2.data,
      loading = _useRequest2.loading,
      run = _useRequest2.run;

  useEffect(function () {
    if (currentId) {
      run();
      forceUpdate();
    }
  }, [currentId]);
  var length = Array.isArray(detail === null || detail === void 0 ? void 0 : detail.data) ? detail === null || detail === void 0 ? void 0 : (_detail$data = detail.data) === null || _detail$data === void 0 ? void 0 : _detail$data.length : 0;

  var handleLoadAll = function handleLoadAll() {
    // load all
    setSize(length); // 重新计算瀑布流

    forceUpdate();
  };

  var LoadMore = size < length && /*#__PURE__*/React.createElement("div", {
    style: {
      textAlign: 'center',
      marginTop: 12,
      height: 32,
      lineHeight: '32px'
    }
  }, /*#__PURE__*/React.createElement("a", {
    className: _dailyReportModule.default.more,
    onClick: handleLoadAll
  }, intl.formatMessage({
    id: 'org.umi.ui.dashboard.card.zaobao.loadAll'
  })));

  var getTagCls = function getTagCls(name) {
    return (0, _classnames.default)(_dailyReportModule.default['listItem-meta-tag'], _defineProperty({}, _dailyReportModule.default["listItem-meta-tag-".concat(TAG_MAP[name] || TAG_MAP.Star)], !!name));
  };

  return /*#__PURE__*/React.createElement(_antd.List, {
    itemLayout: "horizontal",
    loading: loading,
    className: _dailyReportModule.default.list,
    split: false,
    dataSource: Array.isArray(detail === null || detail === void 0 ? void 0 : detail.data) ? detail === null || detail === void 0 ? void 0 : (_detail$data2 = detail.data) === null || _detail$data2 === void 0 ? void 0 : _detail$data2.slice(0, size) : detail === null || detail === void 0 ? void 0 : detail.data,
    loadMore: LoadMore,
    renderItem: function renderItem(item) {
      return _.isPlainObject(item) && /*#__PURE__*/React.createElement(_antd.List.Item, {
        className: _dailyReportModule.default.listItem
      }, /*#__PURE__*/React.createElement(_antd.List.Item.Meta, {
        className: _dailyReportModule.default['listItem-meta'],
        title: /*#__PURE__*/React.createElement("a", {
          target: "_blank",
          rel: "noopener noreferrer",
          href: item.href
        }, /*#__PURE__*/React.createElement(Paragraph, {
          className: _dailyReportModule.default.paragraph,
          ellipsis: true
        }, item.title), ' ', /*#__PURE__*/React.createElement(_antd.Tag, {
          className: getTagCls(item.tag)
        }, item.tag)),
        description: /*#__PURE__*/React.createElement(Paragraph, {
          ellipsis: {
            rows: 3
          }
        }, item.description)
      }));
    }
  });
};

var _default = DailyReport;
exports.default = _default;