"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

var _server = _interopRequireDefault(require("./server"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var _default = api => {
  const utils = api.utils,
        paths = api.paths;
  const winPath = utils.winPath,
        lodash = utils.lodash; // 客户端

  api.addUIPlugin(() => require.resolve('../../dist/index.umd')); // 服务端

  (0, _server.default)(api); // let routeComponents = null;
  // api.onRouteChange(() => {
  //   routeComponents = api.getRouteComponents();
  // });

  const getRouteComponents = componentRoutes => {
    const getComponents = routes => routes.reduce((memo, route) => {
      var _route$component;

      if (route.component && typeof route.component === 'string' && !route.component.startsWith('(') && !((_route$component = route.component) === null || _route$component === void 0 ? void 0 : _route$component.includes('node_modules'))) {
        var _route$component2, _route$component2$rep;

        const routeComponent = (_route$component2 = route.component) === null || _route$component2 === void 0 ? void 0 : (_route$component2$rep = _route$component2.replace('@@', paths.absTmpPath)) === null || _route$component2$rep === void 0 ? void 0 : _route$component2$rep.replace('@', paths.absSrcPath);
        const component = (0, _path().isAbsolute)(routeComponent) ? require.resolve(routeComponent) : require.resolve((0, _path().join)(api.cwd, routeComponent));
        memo.push(winPath(component));
      }

      if (route.routes) {
        memo = memo.concat(getComponents(route.routes));
      }

      return memo;
    }, []);

    return lodash.uniq(getComponents(componentRoutes));
  };

  api.modifyBabelOpts( /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(function* (babelOpts) {
      const routes = yield api.getRoutes();
      const routeComponents = getRouteComponents(routes);
      const plugins = babelOpts.plugins;
      return _objectSpread({}, babelOpts, {
        plugins: [...plugins, [require.resolve('../sdk/flagBabelPlugin'), {
          doTransform(filename) {
            return routeComponents.some(routeComponent => winPath(filename) === winPath(routeComponent));
          }

        }]]
      });
    });

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }());
  api.addEntryCodeAhead(() => `
(() => {
  // Runtime block add component
  window.GUmiUIFlag = require('${winPath(require.resolve('../sdk/flagBabelPlugin/GUmiUIFlag'))}').default;

  // Enable/Disable block add edit mode
  window.addEventListener('message', (event) => {
    try {
      const { action, data } = JSON.parse(event.data);
      switch (action) {
        case 'umi.ui.checkValidEditSection':
          const haveValid = !!document.querySelectorAll('div.g_umiuiBlockAddEditMode').length;
          const frame = document.getElementById('umi-ui-bubble');
          if (frame && frame.contentWindow) {
            frame.contentWindow.postMessage(
              JSON.stringify({
                action: 'umi.ui.checkValidEditSection.success',
                payload: {
                  haveValid,
                },
              }),
              '*',
            );
          }
        default:
          break;
      }
    } catch(e) {
    }
  }, false);
})();
  `);
};

exports.default = _default;